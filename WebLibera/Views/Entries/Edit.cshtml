@model WebLibera.Models.Entry

@{
    Layout = "~/Views/Shared/_LayoutLibera.cshtml";
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Users/Index");
    }
//podria hacer otra comprobacion para ver si el que quiere intentar editar no es el dueño, pero de cualquier forma no puede entrar desde la pagina asi q no importa mucho

}

<body>
    <section id="intro" class="clearfix">
        <div class="container d-flex h-100">
            <div class="row justify-content-center align-self-center">
                <div class="col-md-6 intro-info order-md-first order-last">
                    <h2><br>Eventos y Campañas<br><span></span></h2>
                    <!--<div>
                      <a href="#about" class="btn-get-started scrollto">Comencemos</a>
                    </div>-->
                </div>

            </div>
    </section><!-- #intro -->

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Entry</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Tittle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tittle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tittle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <input type="hidden" name="UserId" id="UserId" value="@Session["userID"]" />

            </div>
            <div>
                @if (Model.imgData != null)
                {
                    var base64 = Convert.ToBase64String(Model.imgData);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                    <img src="@imgSrc" />
                }

            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
